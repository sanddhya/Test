
@mixin clearfix {
  zoom: 1;
  &::before, &::after {
    content: '';
    display: table;
  }
  &::after {
    clear: both;
  }
}

// this extend used everywhere except where 2 gradients are layered
// for those, the gradient needs to be copied manually
%gradient {
  background-image: linear-gradient(90deg, $pb-blue 0%, $pb-magenta 100%);
}

// Breakpoint mixins.

@mixin breakpoint($point) {
  @if $point == screen-xs {
    @media (max-width: 767px) {
      @content;
    }
  }
  @else if $point == screen-sm {
    @media (min-width: 768px) {
      @content;
    }
  }
  @else if $point == screen-md {
    @media (min-width: 992px) {
      @content;
    }
  }
  @else if $point == screen-lg {
    @media (min-width: 1300px) {
      @content;
    }
  }
}

// Mixes a color with white by a supplied percentage
@function tint($color, $percentage) {
  @return mix($color, #fff, $percentage);
}

// Mixes a color with black by a supplied percentage
@function shade($color, $percentage) {
  @return mix($color, #000, $percentage);
}

// improved breakpoint mixins
// https://medium.freecodecamp.com/the-100-correct-way-to-do-css-breakpoints-88d6a5ba1862#.dlj52u7ju
@mixin for-phone-only {
  @media (max-width: 599px) { @content; }
}
@mixin for-tablet-portrait-up {
  @media (min-width: 600px) { @content; }
}
@mixin for-tablet-portrait-only {
  @media (min-width: 600px) and (max-width: 899px) { @content; }
}
@mixin for-tablet-landscape-up {
  @media (min-width: 900px) { @content; }
}
@mixin for-tablet-landscape-only {
  @media (min-width: 900px) and (max-width: 1199px) { @content; }
}
@mixin for-desktop-up {
  @media (min-width: 1200px) { @content; }
}
@mixin for-desktop-only {
  @media (min-width: 1200px) and (max-width: 1799px) { @content; }
}
@mixin for-big-desktop-up {
  @media (min-width: 1800px) { @content; }
}

/// Panel Variants
@mixin panel-variant($border, $heading-text-color, $heading-bg-color, $heading-border) {
  border-color: $border;

  > .panel-heading {
    color: $heading-text-color;
    background-color: $heading-bg-color;
    border-color: $heading-border;

    + .panel-collapse > .panel-body {
      border-top-color: $border;
    }
    .badge {
      color: $heading-bg-color;
      background-color: $heading-text-color;
    }
  }
  > .panel-footer {
    + .panel-collapse > .panel-body {
      border-bottom-color: $border;
    }
  }
}

// Hides the text in an element, commonly used to show an image. Some elements will need block-level styles applied.
// http://zeldman.com/2012/03/01/replacing-the-9999px-hack-new-image-replacement
// Usage
//   .element {
//     @include hide-text;
//   }
@mixin hide-text {
  overflow: hidden;
  text-indent: 101%;
  white-space: nowrap;
}

// Required mixin pulled from Bootstrap's mixins.scss
// Creates a wrapper for a series of columns
/// @param {Number} $gutter [$grid-gutter-width] - Typically 15px
@mixin make-row($gutter: $grid-gutter-width) {
  margin-left: ($gutter / -2);
  margin-right: ($gutter / -2);
  @include clearfix();
}

// Box sizing
@mixin box-sizing($boxmodel) {
  box-sizing: $boxmodel;
}
$grid-column-padding: 15px;

// Contextual backgrounds

// [converter] $parent hack
@mixin bg-variant($parent, $color) {
  #{$parent} {
    background-color: $color;
  }
  a#{$parent}:hover {
    background-color: darken($color, 10%);
  }
}

// Typography
// [converter] $parent hack
@mixin text-emphasis-variant($parent, $color) {
  #{$parent} {
    color: $color;
  }
  a#{$parent}:hover {
    color: darken($color, 10%);
  }
}

@mixin chevron-closed {
  font: normal normal normal 18px/1 'Nucleo Outline';
  content: '\eaaf'; // chevron right
  transform: rotate(0deg);
  transition: transform 200ms;
}

@mixin chevron-opened {
  transform: rotate(90deg);
}

@mixin flat-right($r: $border-radius-base) {
  // border-bottom-left-radius: $r;
  // border-top-left-radius: $r;
  // border-top-right-radius: 0;
  // border-bottom-right-radius: 0;
  border-radius: $r 0 0 $r;
}

@mixin flat-left ($r: $border-radius-base) {
  // border-bottom-left-radius: 0;
  // border-top-left-radius: 0;
  // border-top-right-radius: $r;
  // border-bottom-right-radius: $r;
  border-radius: 0 $r $r 0;
}

/// Button sizes
@mixin button-size($padding-vertical, $padding-horizontal, $font-size, $line-height, $border-radius, $btn-min-width:0) {
  padding: $padding-vertical $padding-horizontal;
  font-size: $font-size;
  line-height: $line-height;
  border-radius: $border-radius;
  min-width: $btn-min-width;
}

//radiuses

/// top
@mixin border-top-radius($radius) {
  border-top-right-radius: $radius;
  border-top-left-radius: $radius;
}
/// bottom
@mixin border-bottom-radius($radius) {
  border-bottom-right-radius: $radius;
  border-bottom-left-radius: $radius;
}
/// right
@mixin border-right-radius($radius) {
  border-bottom-right-radius: $radius;
  border-top-right-radius: $radius;
}
/// left
@mixin border-left-radius($radius) {
  border-bottom-left-radius: $radius;
  border-top-left-radius: $radius;
}


@mixin functional-button($color) {
  background-color: $color;
  border-color: $color;
  &:hover {
    background-color: darken($color, 10%);
    border-color: darken($color, 10%);
  }
}

@mixin focus-ring {
  border-color: #189dbd;
  // outline-width: 6px;
  // outline-style: solid;
  // outline-color: hsla(190, 58%, 79%, .6);
  outline: none;
  box-shadow: 0 0 10px rgba(76, 211, 255, .77);
}

@mixin webkit-only {
  @media (-webkit-min-device-pixel-ratio: 0) {
    @content;
  }
}


@mixin vertical-align($position: relative) {
  position: $position;
  top: 50%;
  transform: translateY(-50%) translateX(-50%);
  left: 50%;
  // transform: translateX(-50%);
}


@mixin arrow-inside($color: #fff, $left: 65px) {
  &::after {
    content: '';
    position: absolute;
    bottom: -13px;
    left: 66px;
    border-width: 14px 14px 0;
    border-style: solid;
    border-color: $color transparent;
  }
}


@mixin arrow-outside($color: $pb-blue, $left: 65px) {
  &::before {
    content: '';
    position: absolute;
    bottom: -15px;
    left: 66px;
    border-width: 14px 14px 0;
    border-style: solid;
    border-color: $color transparent;
  }
}

// extend this in fields where you want the 2.0 focus treatment
%fancy-focus {
  border-color: $pb-blue;
  border-width: 1px;
  outline: 0;
  box-shadow: 0 2px 10px rgba(0, 0, 0, .3);
}
